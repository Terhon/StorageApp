@model StorageWeb.Models.Recipe

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Recipe</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <h4>Ingredients</h4>
            <table id="ingredients-list" class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Amount</th>
                    <th>Unit</th>
                    <th></th>
                </tr>
                </thead>
                <tbody id="ingredient-list">
                @for (var i = 0; i < Model.Ingredients.Count; i++)
                {
                    <tr>
                        <td>
                            <input asp-for="Ingredients[i].Item.Name" class="form-control" disabled/>
                            <input asp-for="Ingredients[i].Id" type="hidden"/>
                            <input asp-for="Ingredients[i].ItemId" type="hidden"/>
                            <input asp-for="Ingredients[i].RecipeId" type="hidden"/>
                        </td>
                        <td>
                            <input type="number" asp-for="Ingredients[i].Amount" class="form-control"/>
                        </td>
                        <td>
                            <input asp-for="Ingredients[i].Item.Unit" class="form-control" disabled/>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger remove-ingredient">Remove</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <div>
                <input type="text" id="search-item" placeholder="Search for an item..." autocomplete="off"/>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

    <script>
        $(document).ready(function () {
            const ingredientsList = $("#ingredients-list tbody");

            $("#search-item").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Recipe/GetIngredients",
                        data: {search: request.term},
                        success: function (data) {
                            response(data.map(item => ({
                                label: `${item.name} (${item.unit})`,
                                value: item.name,
                                id: item.id,
                                unit: item.unit
                            })));
                        }
                    });
                },
                select: function (event, ui) {
                    addIngredient(ui.item);
                    $(this).val(""); // Clear the input field
                    return false; // Prevent default behavior
                }
            });

            function addIngredient(item) {
                let currentIndex = $("#ingredients-list tbody tr").length;
                
                const newRow = $(`
                <tr>
                    <td>
                        <input type="hidden" name="Ingredients[${currentIndex}].Id" value="0" />
                        <input type="hidden" name="Ingredients[${currentIndex}].ItemId" value="${item.id}" /> 
                        <input type="hidden" name="Ingredients[${currentIndex}].RecipeId" value="${@Model.Id}" /> 
                        <input name="Ingredients[${currentIndex}].Item.Name" class="form-control" disabled value="${item.value}"/>                        
                    </td>
                    <td><input type="number" name="Ingredients[${currentIndex}].Amount" class="form-control"/></td>
                    <td><input name="Ingredients[${currentIndex}].Item.Unit" class="form-control" disabled value="${item.unit}"/></td>
                    <td> <button type="button" class="btn btn-danger remove-ingredient">Remove</button></td>
                </tr>
            `);
                ingredientsList.append(newRow);
            }

            $(document).on("click", ".remove-ingredient", function () {
                $(this).closest("tr").remove();
            });
        });
        
    </script>
}
